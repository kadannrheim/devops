# Версия API для работы с объектами Kubernetes
apiVersion: apps/v1

# Тип объекта Kubernetes (в данном случае — Deployment)
kind: Deployment

# Метаданные объекта
metadata:
  # Имя Deployment
  name: sample-site
  # Пространство имен (namespace), в котором будет создан Deployment (по умолчанию — default)
  namespace: default
  # Метки (labels), которые будут присвоены Deployment
  labels:
    app: sample-site

# Спецификация (spec) Deployment
spec:
  # Количество реплик (Pod'ов), которые должны быть созданы
  replicas: 3

  # Селектор для выбора Pod'ов, которыми будет управлять этот Deployment
  selector:
    # Селектор по меткам (labels)
    matchLabels:
      app: sample-site

  # Шаблон (template) для создания Pod'ов
  template:
    # Метаданные для Pod'ов
    metadata:
      # Метки (labels), которые будут присвоены Pod'ам
      labels:
        app: sample-site

    # Спецификация (spec) для Pod'ов
    spec:
      # Контейнеры, которые будут запущены в Pod'ах
      containers:
      - image: nginx  # Образ контейнера (в данном случае — nginx)
        name: sample-site  # Имя контейнера

        # Ограничения и запросы ресурсов для контейнера
        resources:
          # Ограничения (limits) на использование ресурсов
          limits:
            cpu: 50m  # Ограничение на использование CPU (50 миллиядер)
            memory: 100Mi  # Ограничение на использование памяти (100 мегабайт)
          # Запросы (requests) на ресурсы
          requests:
            cpu: 50m  # Запрошенное количество CPU (50 миллиядер)
            memory: 100Mi  # Запрошенное количество памяти (100 мегабайт)

        # Порт, который будет открыт в контейнере
        ports:
        - containerPort: 80  # Порт 80 будет открыт в контейнере

        # Проверка жизнеспособности (livenessProbe) контейнера
        livenessProbe:
          # Проверка с использованием TCP-сокета
          tcpSocket:
            port: 80  # Порт, который будет проверяться
          initialDelaySeconds: 15  # Задержка перед первой проверкой (15 секунд)
          periodSeconds: 20  # Интервал между проверками (20 секунд)

        # Проверка готовности (readinessProbe) контейнера
        readinessProbe:
          # Проверка с использованием HTTP-запроса
          httpGet:
            path: /  # Путь для HTTP-запроса (в данном случае — корневой путь)
            port: 80  # Порт, который будет проверяться
          initialDelaySeconds: 15  # Задержка перед первой проверкой (15 секунд)
          periodSeconds: 20  # Интервал между проверками (20 секунд)